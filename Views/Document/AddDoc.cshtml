@model AEDFirst.Models.UploadDocumentViewModel

@{
    ViewBag.Title = "Ajouter un document";
    ViewBag.Name = "Documents";
    ViewBag.Description = "Ajout";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<div class="row">
    <div class="col-lg-12">
        <div class="card">
            @using (Html.BeginForm("AddDoc", "Document", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @*<div class="form-group">
                            @Html.LabelFor(model => model.Titre, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Titre, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Titre, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                    @*<div class="form-group">
                            @Html.LabelFor(model => model.Format, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Format, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Format, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Taille, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Taille, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Taille, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                    @*<div class="form-group">
                            @Html.LabelFor(model => model.DateUpload, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.DateUpload, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DateUpload, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                    @*<div class="form-group">
                            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                    @*<div class="form-group">
                            @Html.LabelFor(model => model.Tags, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Tags, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Tags, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.NomAuteur, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.NomAuteur, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.NomAuteur, "", new { @class = "text-danger" })
                            </div>
                        </div>*@


                    @*<div class="form-group">
                            @Html.LabelFor(model => model.IdSC, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.IdSC, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.IdSC, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.IdDoss, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.IdDoss, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.IdDoss, "", new { @class = "text-danger" })
                            </div>
                        </div>*@


                    <div class="card-body">
                        <form>
                            <div class="row g-3">

                                <div class="col-lg-12">
                                    <label for="file" class="form-label">Sélectionnez le fichier</label>
                                    <input type="file" name="DocFile" id="DocFile" class="form-control" required/>
                                </div>
                                <!--end col-->

                                <div class="col-lg-12">
                                    @Html.LabelFor(model => model.Titre, htmlAttributes: new { @class = "form-label" })
                                    @Html.EditorFor(model => model.Titre, new { htmlAttributes = new { @class = "form-control", placeholder = "Entrer le titre du document", required = "required"} })
                                    @Html.ValidationMessageFor(model => model.Titre, "", new { @class = "text-danger" })
                                </div><!--end col-->

                                <div class="col-lg-6">
                                    @Html.LabelFor(model => model.Format, htmlAttributes: new { @class = "form-label" })
                                    @Html.EditorFor(model => model.Format, new { htmlAttributes = new { @class = "form-control", @placeholder = "PDF, JPG, MP4, ...", required = "required" } })
                                    @Html.ValidationMessageFor(model => model.Format, "", new { @class = "text-danger" })
                                </div><!--end col-->

                                <div class="col-lg-6">
                                    @Html.LabelFor(model => model.Taille, htmlAttributes: new { @class = "form-label" })
                                    @Html.EditorFor(model => model.Taille, new { htmlAttributes = new { @class = "form-control", @placeholder = "Taille", required = "required" } })
                                    @Html.ValidationMessageFor(model => model.Taille, "", new { @class = "text-danger" })
                                </div><!--end col-->

                                <div class="col-lg-6">
                                    @Html.LabelFor(model => model.NomAuteur, htmlAttributes: new { @class = "form-label" })
                                    @Html.EditorFor(model => model.NomAuteur, new { htmlAttributes = new { @class = "form-control", @placeholder = "Créateur du document", required = "required" } })
                                    @Html.ValidationMessageFor(model => model.NomAuteur, "", new { @class = "text-danger" })
                                </div><!--end col-->

                                <div class="col-lg-6">
                                    @Html.LabelFor(model => model.Tags, htmlAttributes: new { @class = "form-label" })
                                    @Html.EditorFor(model => model.Tags, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                                    @Html.ValidationMessageFor(model => model.Tags, "", new { @class = "text-danger" })
                                </div><!--end col-->
                                <!--<div class="col-lg-12">
        @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "form-label" })
        <div class="avatar-xl mx-auto">-->
                                @*<input type="file" class="filepond filepond-input-circle" name="filepond" accept="image/png, image/jpeg, image/gif" />*@
                                <!--@Html.EditorFor(model => model.Image, new { htmlAttributes = new { @type = "file", @class = "filepond filepond-input-circle", @accept = "image/png, image/jpeg, image/gif" } })
            @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
        </div>
    </div>-->
                                <!--end col-->
                                @*@Html.HiddenFor(model => model.IdUploader, "")*@

                                <!--<div class="col-lg-12">
        <label for="externalLink" class="form-label">External link</label>
        <input type="text" class="form-control" id="externalLink" placeholder="Enter external link">
    </div>-->
                                <!--end col-->
                                <!--<div class="col-lg-4">
        <label for="itemPrice" class="form-label">Item Price</label>
        <input type="text" class="form-control" id="itemPrice" placeholder="Price">
    </div>-->
                                <!--end col-->
                                <!--<div class="col-lg-4">
        <label for="size" class="form-label">Size</label>
        <input type="text" class="form-control" id="size" placeholder="Size">
    </div>-->
                                <!--end col-->
                                <!--<div class="col-lg-4">
        <label for="properties" class="form-label">Properties</label>
        <input type="text" class="form-control" id="properties" placeholder="Properties">
    </div>-->
                                <!--end col-->
                                <!--<div class="col-lg-12">
        <div>
            <div class="form-check form-check-inline">
                <input class="form-check-input" type="checkbox" id="inlineCheckbox1" value="option1">
                <label class="form-check-label" for="inlineCheckbox1">Put on sale</label>
            </div>
            <div class="form-check form-check-inline">
                <input class="form-check-input" type="checkbox" id="inlineCheckbox2" value="option2">
                <label class="form-check-label" for="inlineCheckbox2">Instant sale price</label>
            </div>
            <div class="form-check form-check-inline">
                <input class="form-check-input" type="checkbox" id="inlineCheckbox3" value="option3">
                <label class="form-check-label" for="inlineCheckbox3">Unlock one purchased</label>
            </div>
        </div>
    </div>-->
                                <!--end col-->
                                @*<div class="col-lg-12">
                                    <div class="text-start">
                                        <a href="@Url.Action("Index")" class="btn btn-light btn-label ms-auto">
                                            <i class="ri-arrow-left-line label-icon align-middle fs-16 me-2"></i>
                                            Retour à la liste
                                        </a>
                                    </div>
                                    <div class="text-end">
                                        <button type="submit" class="btn btn-primary btn-label right ms-auto">
                                            <i class="ri-save-line label-icon align-middle fs-16 ms-2"></i>
                                            Sauvegarder
                                        </button>
                                    </div>
                                </div>*@
                                <div class="mt-4 clearfix">
                                    <a href="@Url.Action("Index")" class="btn btn-light btn-label left ms-auto float-start">
                                        <i class="ri-arrow-left-line label-icon align-middle fs-16 me-2"></i>
                                        Retour à la liste
                                    </a>
                                    <button type="submit" class="btn btn-primary btn-label right ms-auto float-end">
                                        <i class="ri-save-line label-icon align-middle fs-16 ms-2"></i>
                                        Sauvegarder
                                    </button>
                                </div>
                            </div><!--end row-->
                        </form>
                    </div>

                    @*<div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Create" class="btn btn-default" />
                            </div>
                        </div>*@
                </div>
            }

            @*<div>
                @Html.ActionLink("Back to List", "Index")
            </div>*@
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <!-- filepond js -->
    <script src="~/Content/Layouts/Velzon/libs/filepond/filepond.min.js"></script>
    <script src="~/Content/Layouts/Velzon/libs/filepond-plugin-image-preview/filepond-plugin-image-preview.min.js"></script>
    <script src="~/Content/Layouts/Velzon/libs/filepond-plugin-file-validate-size/filepond-plugin-file-validate-size.min.js"></script>
    <script src="~/Content/Layouts/Velzon/libs/filepond-plugin-image-exif-orientation/filepond-plugin-image-exif-orientation.min.js"></script>
    <script src="~/Content/Layouts/Velzon/libs/filepond-plugin-file-encode/filepond-plugin-file-encode.min.js"></script>
    <!-- dropzone js -->
    <script src="~/Content/Layouts/Velzon/libs/dropzone/dropzone-min.js"></script>
    <!-- project-create init -->
    <script src="~/Content/Layouts/Velzon/js/pages/project-create.init.js"></script>
}

@section Stylesheets {
    <!-- dropzone css -->
    <link rel="stylesheet" href="~/Content/Layouts/Velzon/libs/dropzone/dropzone.css" type="text/css" />
    <!-- Filepond css -->
    <link rel="stylesheet" href="~/Content/Layouts/Velzon/libs/filepond/filepond.min.css" type="text/css" />
    <link rel="stylesheet" href="~/Content/Layouts/Velzon/libs/filepond-plugin-image-preview/filepond-plugin-image-preview.min.css">
}
